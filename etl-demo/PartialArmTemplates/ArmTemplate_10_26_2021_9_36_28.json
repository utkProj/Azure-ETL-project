{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "etl-demo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "input_projects",
								"type": "DatasetReference"
							},
							"name": "inputProjects"
						},
						{
							"dataset": {
								"referenceName": "input_leads",
								"type": "DatasetReference"
							},
							"name": "inputLeads"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "output_project_leads",
								"type": "DatasetReference"
							},
							"name": "outputProjectLeads"
						}
					],
					"transformations": [
						{
							"name": "mergedProjectLeads"
						}
					],
					"script": "source(output(\n\t\tID as string,\n\t\tProject as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inputProjects\nsource(output(\n\t\tID as string,\n\t\tLead as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inputLeads\ninputProjects, inputLeads join(inputProjects@ID == inputLeads@ID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> mergedProjectLeads\nmergedProjectLeads sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPR_ID as integer,\n\t\tPR_Name as string,\n\t\tPR_Lead as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> outputProjectLeads"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/input_projects')]",
				"[concat(variables('factoryId'), '/datasets/input_leads')]",
				"[concat(variables('factoryId'), '/datasets/output_project_leads')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/input_projects')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Input Blob Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Tab_Projekte.csv",
						"container": "etl-demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/input_leads')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Input Blob Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Tab_Leads.csv",
						"container": "etl-demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/output_project_leads')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Output SQL Database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PR_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PR_Name",
						"type": "varchar"
					},
					{
						"name": "PR_Lead",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Projects"
				}
			},
			"dependsOn": []
		}
	]
}